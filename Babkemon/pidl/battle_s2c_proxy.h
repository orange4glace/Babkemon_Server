



  
// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

#pragma once


#include "battle_s2c_common.h"

namespace battle_s2c {


	class Proxy : public ::Proud::IRmiProxy
	{
	public:
	virtual bool SetCooldown ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::battle::EntityID & id, const int & cooldown) PN_SEALED; 
	virtual bool SetCooldown ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const mgg::babkemon::battle::EntityID & id, const int & cooldown)   PN_SEALED;  
	virtual bool BattleInfo ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::battle::BattleInfoPacket & battle_info) PN_SEALED; 
	virtual bool BattleInfo ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const mgg::babkemon::battle::BattleInfoPacket & battle_info)   PN_SEALED;  
	virtual bool SpawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & battle_player_id, const mgg::babkemon::battle::EntitySpawnPacket & packet) PN_SEALED; 
	virtual bool SpawnEntity ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int & battle_player_id, const mgg::babkemon::battle::EntitySpawnPacket & packet)   PN_SEALED;  
	virtual bool CastSkill ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::battle::EntityID & entity_id, const mgg::babkemon::packet::SkillBattleCastPacket & packet) PN_SEALED; 
	virtual bool CastSkill ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const mgg::babkemon::battle::EntityID & entity_id, const mgg::babkemon::packet::SkillBattleCastPacket & packet)   PN_SEALED;  
	virtual bool BattleEnd ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_SEALED; 
	virtual bool BattleEnd ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext)   PN_SEALED;  
	virtual bool BattleWin ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_SEALED; 
	virtual bool BattleWin ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext)   PN_SEALED;  
	virtual bool BattleLose ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_SEALED; 
	virtual bool BattleLose ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext)   PN_SEALED;  
	virtual bool Turn ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext ) PN_SEALED; 
	virtual bool Turn ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext)   PN_SEALED;  
static const PNTCHAR* RmiName_SetCooldown;
static const PNTCHAR* RmiName_BattleInfo;
static const PNTCHAR* RmiName_SpawnEntity;
static const PNTCHAR* RmiName_CastSkill;
static const PNTCHAR* RmiName_BattleEnd;
static const PNTCHAR* RmiName_BattleWin;
static const PNTCHAR* RmiName_BattleLose;
static const PNTCHAR* RmiName_Turn;
static const PNTCHAR* RmiName_First;
		Proxy()
		{
			if(m_signature != 1)
				::Proud::ShowUserMisuseError(::Proud::ProxyBadSignatureErrorText);
		}

		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; } 
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

}



