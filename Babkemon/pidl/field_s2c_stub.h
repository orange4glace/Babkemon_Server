  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "field_s2c_common.h"

     
namespace field_s2c {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool Snapshot ( ::Proud::HostID, ::Proud::RmiContext& , const mgg::babkemon::field::Snapshot  & )		{ 
			return false;
		} 

#define DECRMI_field_s2c_Snapshot bool Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::field::Snapshot  & snapshot) PN_OVERRIDE

#define DEFRMI_field_s2c_Snapshot(DerivedClass) bool DerivedClass::Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::field::Snapshot  & snapshot)
#define CALL_field_s2c_Snapshot Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::field::Snapshot  & snapshot)
#define PARAM_field_s2c_Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::field::Snapshot  & snapshot)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_Snapshot;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const mgg::babkemon::field::Snapshot  & ) > Snapshot_Function;
		virtual bool Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::field::Snapshot  & snapshot) 
		{ 
			if (Snapshot_Function==nullptr) 
				return true; 
			return Snapshot_Function(remote,rmiContext, snapshot); 
		}

	};
#endif

}


