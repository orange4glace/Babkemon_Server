




// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

using System;
using System.Net;

namespace common_s2c
{
	internal class Proxy:Nettention.Proud.RmiProxy
	{
public bool Welcome(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int player_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.Welcome;
		__msg.Write(__msgid);
		mgg.babkemon.network.Marshaler.Write(__msg, player_id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_Welcome, Common.Welcome);
}

public bool Welcome(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int player_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.Welcome;
__msg.Write(__msgid);
mgg.babkemon.network.Marshaler.Write(__msg, player_id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_Welcome, Common.Welcome);
}
public bool EnterBattle(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int battle_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.EnterBattle;
		__msg.Write(__msgid);
		mgg.babkemon.network.Marshaler.Write(__msg, battle_id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_EnterBattle, Common.EnterBattle);
}

public bool EnterBattle(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int battle_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.EnterBattle;
__msg.Write(__msgid);
mgg.babkemon.network.Marshaler.Write(__msg, battle_id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_EnterBattle, Common.EnterBattle);
}
public bool EnterField(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int field_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.EnterField;
		__msg.Write(__msgid);
		mgg.babkemon.network.Marshaler.Write(__msg, field_id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_EnterField, Common.EnterField);
}

public bool EnterField(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int field_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.EnterField;
__msg.Write(__msgid);
mgg.babkemon.network.Marshaler.Write(__msg, field_id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_EnterField, Common.EnterField);
}
public bool AddItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, mgg.babkemon.item.ItemPacket packet)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AddItem;
		__msg.Write(__msgid);
		mgg.babkemon.network.Marshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AddItem, Common.AddItem);
}

public bool AddItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, mgg.babkemon.item.ItemPacket packet)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AddItem;
__msg.Write(__msgid);
mgg.babkemon.network.Marshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AddItem, Common.AddItem);
}
public bool RemoveItem(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int item_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.RemoveItem;
		__msg.Write(__msgid);
		mgg.babkemon.network.Marshaler.Write(__msg, item_id);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_RemoveItem, Common.RemoveItem);
}

public bool RemoveItem(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int item_id)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.RemoveItem;
__msg.Write(__msgid);
mgg.babkemon.network.Marshaler.Write(__msg, item_id);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_RemoveItem, Common.RemoveItem);
}
public bool SetItemAmount(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, int item_id, int amount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.SetItemAmount;
		__msg.Write(__msgid);
		mgg.babkemon.network.Marshaler.Write(__msg, item_id);
		mgg.babkemon.network.Marshaler.Write(__msg, amount);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_SetItemAmount, Common.SetItemAmount);
}

public bool SetItemAmount(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, int item_id, int amount)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.SetItemAmount;
__msg.Write(__msgid);
mgg.babkemon.network.Marshaler.Write(__msg, item_id);
mgg.babkemon.network.Marshaler.Write(__msg, amount);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_SetItemAmount, Common.SetItemAmount);
}
public bool AddBabkemon(Nettention.Proud.HostID remote,Nettention.Proud.RmiContext rmiContext, mgg.babkemon.packet.BabkemonPacket packet)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
		__msg.SimplePacketMode = core.IsSimplePacketMode();
		Nettention.Proud.RmiID __msgid= Common.AddBabkemon;
		__msg.Write(__msgid);
		mgg.babkemon.network.Marshaler.Write(__msg, packet);
		
	Nettention.Proud.HostID[] __list = new Nettention.Proud.HostID[1];
	__list[0] = remote;
		
	return RmiSend(__list,rmiContext,__msg,
		RmiName_AddBabkemon, Common.AddBabkemon);
}

public bool AddBabkemon(Nettention.Proud.HostID[] remotes,Nettention.Proud.RmiContext rmiContext, mgg.babkemon.packet.BabkemonPacket packet)
{
	Nettention.Proud.Message __msg=new Nettention.Proud.Message();
__msg.SimplePacketMode = core.IsSimplePacketMode();
Nettention.Proud.RmiID __msgid= Common.AddBabkemon;
__msg.Write(__msgid);
mgg.babkemon.network.Marshaler.Write(__msg, packet);
		
	return RmiSend(remotes,rmiContext,__msg,
		RmiName_AddBabkemon, Common.AddBabkemon);
}
#if USE_RMI_NAME_STRING
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
const string RmiName_Welcome="Welcome";
const string RmiName_EnterBattle="EnterBattle";
const string RmiName_EnterField="EnterField";
const string RmiName_AddItem="AddItem";
const string RmiName_RemoveItem="RemoveItem";
const string RmiName_SetItemAmount="SetItemAmount";
const string RmiName_AddBabkemon="AddBabkemon";
       
const string RmiName_First = RmiName_Welcome;
#else
// RMI name declaration.
// It is the unique pointer that indicates RMI name such as RMI profiler.
const string RmiName_Welcome="";
const string RmiName_EnterBattle="";
const string RmiName_EnterField="";
const string RmiName_AddItem="";
const string RmiName_RemoveItem="";
const string RmiName_SetItemAmount="";
const string RmiName_AddBabkemon="";
       
const string RmiName_First = "";
#endif
		public override Nettention.Proud.RmiID[] GetRmiIDList() { return Common.RmiIDList; } 
	}
}

