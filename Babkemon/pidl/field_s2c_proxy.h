



  
// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.

#pragma once


#include "field_s2c_common.h"

namespace field_s2c {


	class Proxy : public ::Proud::IRmiProxy
	{
	public:
	virtual bool Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::field::FieldSnapshotPacket & snapshot) PN_SEALED; 
	virtual bool Snapshot ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const mgg::babkemon::field::FieldSnapshotPacket & snapshot)   PN_SEALED;  
	virtual bool SpawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const mgg::babkemon::field::EntitySpawnPacket & packet) PN_SEALED; 
	virtual bool SpawnEntity ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const mgg::babkemon::field::EntitySpawnPacket & packet)   PN_SEALED;  
	virtual bool DespawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int & entity_id) PN_SEALED; 
	virtual bool DespawnEntity ( ::Proud::HostID *remotes, int remoteCount, ::Proud::RmiContext &rmiContext, const int & entity_id)   PN_SEALED;  
static const PNTCHAR* RmiName_Snapshot;
static const PNTCHAR* RmiName_SpawnEntity;
static const PNTCHAR* RmiName_DespawnEntity;
static const PNTCHAR* RmiName_First;
		Proxy()
		{
			if(m_signature != 1)
				::Proud::ShowUserMisuseError(::Proud::ProxyBadSignatureErrorText);
		}

		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; } 
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

}



