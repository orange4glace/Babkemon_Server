  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "battle_c2s_common.h"

     
namespace battle_c2s {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool SpawnEntity ( ::Proud::HostID, ::Proud::RmiContext& , const int  & )		{ 
			return false;
		} 

#define DECRMI_battle_c2s_SpawnEntity bool SpawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id) PN_OVERRIDE

#define DEFRMI_battle_c2s_SpawnEntity(DerivedClass) bool DerivedClass::SpawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id)
#define CALL_battle_c2s_SpawnEntity SpawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id)
#define PARAM_battle_c2s_SpawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id)
               
		virtual bool SkillCommand ( ::Proud::HostID, ::Proud::RmiContext& , const int  & , const mgg::babkemon::battle::SkillCommandPacket  & )		{ 
			return false;
		} 

#define DECRMI_battle_c2s_SkillCommand bool SkillCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::SkillCommandPacket  & packet) PN_OVERRIDE

#define DEFRMI_battle_c2s_SkillCommand(DerivedClass) bool DerivedClass::SkillCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::SkillCommandPacket  & packet)
#define CALL_battle_c2s_SkillCommand SkillCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::SkillCommandPacket  & packet)
#define PARAM_battle_c2s_SkillCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::SkillCommandPacket  & packet)
               
		virtual bool ItemCommand ( ::Proud::HostID, ::Proud::RmiContext& , const int  & , const mgg::babkemon::battle::ItemCommandPacket  & )		{ 
			return false;
		} 

#define DECRMI_battle_c2s_ItemCommand bool ItemCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::ItemCommandPacket  & packet) PN_OVERRIDE

#define DEFRMI_battle_c2s_ItemCommand(DerivedClass) bool DerivedClass::ItemCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::ItemCommandPacket  & packet)
#define CALL_battle_c2s_ItemCommand ItemCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::ItemCommandPacket  & packet)
#define PARAM_battle_c2s_ItemCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::ItemCommandPacket  & packet)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_SpawnEntity;
		static const PNTCHAR* RmiName_SkillCommand;
		static const PNTCHAR* RmiName_ItemCommand;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int  & ) > SpawnEntity_Function;
		virtual bool SpawnEntity ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id) 
		{ 
			if (SpawnEntity_Function==nullptr) 
				return true; 
			return SpawnEntity_Function(remote,rmiContext, entity_id); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int  & , const mgg::babkemon::battle::SkillCommandPacket  & ) > SkillCommand_Function;
		virtual bool SkillCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::SkillCommandPacket  & packet) 
		{ 
			if (SkillCommand_Function==nullptr) 
				return true; 
			return SkillCommand_Function(remote,rmiContext, entity_id, packet); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int  & , const mgg::babkemon::battle::ItemCommandPacket  & ) > ItemCommand_Function;
		virtual bool ItemCommand ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & entity_id, const mgg::babkemon::battle::ItemCommandPacket  & packet) 
		{ 
			if (ItemCommand_Function==nullptr) 
				return true; 
			return ItemCommand_Function(remote,rmiContext, entity_id, packet); 
		}

	};
#endif

}


